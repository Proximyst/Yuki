#[derive(Debug, Clone, Copy)]
pub struct HazeDumper {
    pub timestamp: u64,
    pub signatures: Signatures,
    pub netvars: Netvars,
}

impl HazeDumper {
    #[allow(clippy::unreadable_literal)]
    pub const fn new() -> Self {
        HazeDumper {
            timestamp: 1560291370,
            signatures: Signatures::new(),
            netvars: Netvars::new(),
        }
    }
}

#[derive(Debug, Clone, Copy)]
#[allow(non_snake_case)]
pub struct Signatures {
    pub clientstate_choked_commands: usize,
    pub clientstate_delta_ticks: usize,
    pub clientstate_last_outgoing_command: usize,
    pub clientstate_net_channel: usize,
    pub convar_name_hash_table: usize,
    pub dwClientState: usize,
    pub dwClientState_GetLocalPlayer: usize,
    pub dwClientState_IsHLTV: usize,
    pub dwClientState_Map: usize,
    pub dwClientState_MapDirectory: usize,
    pub dwClientState_MaxPlayer: usize,
    pub dwClientState_PlayerInfo: usize,
    pub dwClientState_State: usize,
    pub dwClientState_ViewAngles: usize,
    pub dwEntityList: usize,
    pub dwForceAttack: usize,
    pub dwForceAttack2: usize,
    pub dwForceBackward: usize,
    pub dwForceForward: usize,
    pub dwForceJump: usize,
    pub dwForceLeft: usize,
    pub dwForceRight: usize,
    pub dwGameDir: usize,
    pub dwGameRulesProxy: usize,
    pub dwGetAllClasses: usize,
    pub dwGlobalVars: usize,
    pub dwGlowObjectManager: usize,
    pub dwInput: usize,
    pub dwInterfaceLinkList: usize,
    pub dwLocalPlayer: usize,
    pub dwMouseEnable: usize,
    pub dwMouseEnablePtr: usize,
    pub dwPlayerResource: usize,
    pub dwRadarBase: usize,
    pub dwSensitivity: usize,
    pub dwSensitivityPtr: usize,
    pub dwSetClanTag: usize,
    pub dwViewMatrix: usize,
    pub dwWeaponTable: usize,
    pub dwWeaponTableIndex: usize,
    pub dwYawPtr: usize,
    pub dwZoomSensitivityRatioPtr: usize,
    pub dwbSendPackets: usize,
    pub dwppDirect3DDevice9: usize,
    pub force_update_spectator_glow: usize,
    pub interface_engine_cvar: usize,
    pub is_c4_owner: usize,
    pub m_bDormant: usize,
    pub m_pStudioHdr: usize,
    pub m_pitchClassPtr: usize,
    pub m_yawClassPtr: usize,
    pub model_ambient_min: usize,
    pub set_abs_angles: usize,
    pub set_abs_origin: usize,
}

#[derive(Debug, Clone, Copy)]
#[allow(non_snake_case)]
pub struct Netvars {
    pub cs_gamerules_data: usize,
    pub m_ArmorValue: usize,
    pub m_Collision: usize,
    pub m_CollisionGroup: usize,
    pub m_Local: usize,
    pub m_MoveType: usize,
    pub m_OriginalOwnerXuidHigh: usize,
    pub m_OriginalOwnerXuidLow: usize,
    pub m_SurvivalGameRuleDecisionTypes: usize,
    pub m_SurvivalRules: usize,
    pub m_aimPunchAngle: usize,
    pub m_aimPunchAngleVel: usize,
    pub m_angEyeAnglesX: usize,
    pub m_angEyeAnglesY: usize,
    pub m_bBombPlanted: usize,
    pub m_bFreezePeriod: usize,
    pub m_bGunGameImmunity: usize,
    pub m_bHasDefuser: usize,
    pub m_bHasHelmet: usize,
    pub m_bInReload: usize,
    pub m_bIsDefusing: usize,
    pub m_bIsQueuedMatchmaking: usize,
    pub m_bIsScoped: usize,
    pub m_bIsValveDS: usize,
    pub m_bSpotted: usize,
    pub m_bSpottedByMask: usize,
    pub m_bStartedArming: usize,
    pub m_clrRender: usize,
    pub m_dwBoneMatrix: usize,
    pub m_fAccuracyPenalty: usize,
    pub m_fFlags: usize,
    pub m_flC4Blow: usize,
    pub m_flDefuseCountDown: usize,
    pub m_flDefuseLength: usize,
    pub m_flFallbackWear: usize,
    pub m_flFlashDuration: usize,
    pub m_flFlashMaxAlpha: usize,
    pub m_flLastBoneSetupTime: usize,
    pub m_flLowerBodyYawTarget: usize,
    pub m_flNextAttack: usize,
    pub m_flNextPrimaryAttack: usize,
    pub m_flSimulationTime: usize,
    pub m_flTimerLength: usize,
    pub m_hActiveWeapon: usize,
    pub m_hMyWeapons: usize,
    pub m_hObserverTarget: usize,
    pub m_hOwner: usize,
    pub m_hOwnerEntity: usize,
    pub m_iAccountID: usize,
    pub m_iClip1: usize,
    pub m_iCompetitiveRanking: usize,
    pub m_iCompetitiveWins: usize,
    pub m_iCrosshairId: usize,
    pub m_iEntityQuality: usize,
    pub m_iFOV: usize,
    pub m_iFOVStart: usize,
    pub m_iGlowIndex: usize,
    pub m_iHealth: usize,
    pub m_iItemDefinitionIndex: usize,
    pub m_iItemIDHigh: usize,
    pub m_iMostRecentModelBoneCounter: usize,
    pub m_iObserverMode: usize,
    pub m_iShotsFired: usize,
    pub m_iState: usize,
    pub m_iTeamNum: usize,
    pub m_lifeState: usize,
    pub m_nFallbackPaintKit: usize,
    pub m_nFallbackSeed: usize,
    pub m_nFallbackStatTrak: usize,
    pub m_nForceBone: usize,
    pub m_nTickBase: usize,
    pub m_rgflCoordinateFrame: usize,
    pub m_szCustomName: usize,
    pub m_szLastPlaceName: usize,
    pub m_thirdPersonViewAngles: usize,
    pub m_vecOrigin: usize,
    pub m_vecVelocity: usize,
    pub m_vecViewOffset: usize,
    pub m_viewPunchAngle: usize,
}

impl Signatures {
    #[allow(clippy::unreadable_literal)]
    pub const fn new() -> Self {
        Signatures {
            clientstate_choked_commands: 19752,
            clientstate_delta_ticks: 372,
            clientstate_last_outgoing_command: 19748,
            clientstate_net_channel: 156,
            convar_name_hash_table: 192760,
            dwClientState: 5819644,
            dwClientState_GetLocalPlayer: 384,
            dwClientState_IsHLTV: 19776,
            dwClientState_Map: 652,
            dwClientState_MapDirectory: 392,
            dwClientState_MaxPlayer: 904,
            dwClientState_PlayerInfo: 21176,
            dwClientState_State: 264,
            dwClientState_ViewAngles: 19848,
            dwEntityList: 80759412,
            dwForceAttack: 51601724,
            dwForceAttack2: 51601736,
            dwForceBackward: 51601784,
            dwForceForward: 51601748,
            dwForceJump: 85623084,
            dwForceLeft: 51601772,
            dwForceRight: 51601808,
            dwGameDir: 6500208,
            dwGameRulesProxy: 86090868,
            dwGetAllClasses: 13727940,
            dwGlobalVars: 5818880,
            dwGlowObjectManager: 86265752,
            dwInput: 85260992,
            dwInterfaceLinkList: 9206708,
            dwLocalPlayer: 13576764,
            dwMouseEnable: 13600136,
            dwMouseEnablePtr: 13600088,
            dwPlayerResource: 51594428,
            dwRadarBase: 85170132,
            dwSensitivity: 13599780,
            dwSensitivityPtr: 13599736,
            dwSetClanTag: 562848,
            dwViewMatrix: 80700580,
            dwWeaponTable: 85263748,
            dwWeaponTableIndex: 12860,
            dwYawPtr: 13599208,
            dwZoomSensitivityRatioPtr: 13620232,
            dwbSendPackets: 862218,
            dwppDirect3DDevice9: 679984,
            force_update_spectator_glow: 3747874,
            interface_engine_cvar: 256492,
            is_c4_owner: 3797872,
            m_bDormant: 237,
            m_pStudioHdr: 10572,
            m_pitchClassPtr: 85170816,
            m_yawClassPtr: 13599208,
            model_ambient_min: 5831964,
            set_abs_angles: 1877904,
            set_abs_origin: 1877456,
        }
    }
}

impl Netvars {
    #[allow(clippy::unreadable_literal)]
    pub const fn new() -> Self {
        Netvars {
            cs_gamerules_data: 0,
            m_ArmorValue: 45888,
            m_Collision: 796,
            m_CollisionGroup: 1140,
            m_Local: 12220,
            m_MoveType: 604,
            m_OriginalOwnerXuidHigh: 12724,
            m_OriginalOwnerXuidLow: 12720,
            m_SurvivalGameRuleDecisionTypes: 4896,
            m_SurvivalRules: 3320,
            m_aimPunchAngle: 12332,
            m_aimPunchAngleVel: 12344,
            m_angEyeAnglesX: 45892,
            m_angEyeAnglesY: 45896,
            m_bBombPlanted: 2461,
            m_bFreezePeriod: 32,
            m_bGunGameImmunity: 14636,
            m_bHasDefuser: 45904,
            m_bHasHelmet: 45876,
            m_bInReload: 12933,
            m_bIsDefusing: 14616,
            m_bIsQueuedMatchmaking: 116,
            m_bIsScoped: 14608,
            m_bIsValveDS: 117,
            m_bSpotted: 2365,
            m_bSpottedByMask: 2432,
            m_bStartedArming: 13264,
            m_clrRender: 112,
            m_dwBoneMatrix: 9896,
            m_fAccuracyPenalty: 13072,
            m_fFlags: 260,
            m_flC4Blow: 10640,
            m_flDefuseCountDown: 10668,
            m_flDefuseLength: 10664,
            m_flFallbackWear: 12736,
            m_flFlashDuration: 41972,
            m_flFlashMaxAlpha: 41968,
            m_flLastBoneSetupTime: 10532,
            m_flLowerBodyYawTarget: 14968,
            m_flNextAttack: 11632,
            m_flNextPrimaryAttack: 12824,
            m_flSimulationTime: 616,
            m_flTimerLength: 10644,
            m_hActiveWeapon: 12024,
            m_hMyWeapons: 11768,
            m_hObserverTarget: 13192,
            m_hOwner: 10700,
            m_hOwnerEntity: 332,
            m_iAccountID: 12232,
            m_iClip1: 12868,
            m_iCompetitiveRanking: 6788,
            m_iCompetitiveWins: 7048,
            m_iCrosshairId: 45996,
            m_iEntityQuality: 12204,
            m_iFOV: 12772,
            m_iFOVStart: 12776,
            m_iGlowIndex: 41996,
            m_iHealth: 256,
            m_iItemDefinitionIndex: 12202,
            m_iItemIDHigh: 12224,
            m_iMostRecentModelBoneCounter: 9872,
            m_iObserverMode: 13172,
            m_iShotsFired: 41856,
            m_iState: 12856,
            m_iTeamNum: 244,
            m_lifeState: 607,
            m_nFallbackPaintKit: 12728,
            m_nFallbackSeed: 12732,
            m_nFallbackStatTrak: 12740,
            m_nForceBone: 9868,
            m_nTickBase: 13356,
            m_rgflCoordinateFrame: 1092,
            m_szCustomName: 12348,
            m_szLastPlaceName: 13744,
            m_thirdPersonViewAngles: 12760,
            m_vecOrigin: 312,
            m_vecVelocity: 276,
            m_vecViewOffset: 264,
            m_viewPunchAngle: 12320,
        }
    }
}

impl Default for HazeDumper {
    fn default() -> Self {
        HazeDumper::new()
    }
}

impl Default for Signatures {
    fn default() -> Self {
        Signatures::new()
    }
}

impl Default for Netvars {
    fn default() -> Self {
        Netvars::new()
    }
}

/// A static instance containing the signatures and netvars as fetched by
/// HazeDumper and placed inside the `/build-src/hazedumper_csgo.toml` file by
/// `/fetch-hazedumper.sh`.
pub static HAZEDUMPER: self::HazeDumper = self::HazeDumper::new();
